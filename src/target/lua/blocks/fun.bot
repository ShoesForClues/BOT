CALL
	GBL "BOT.REGISTER_TRANSLATE_UNIT"
	ARR "FUN"
	FUN 9
		SET
			VAR "BLOCK"
			ARG 0
		SET
			VAR "BODY"
			ARG 1
		SET
			VAR "FUNCTIONS"
			ARG 7
		CALL
			GBL "BOT.BLOCK.GET_VALUES"
			VAR "BLOCK"
			VAR "VALUES"
		LEN
			VAR "VALUES"
			VAR "VALUE_COUNT"
		SET
			VAR "LOCALS"
			ARR
		SET
			VAR "FUNCTION_BODY"
			ARR
		SET
			VAR "SUBROUTINE_BODY"
			ARR
		CMP ">"
			VAR "VALUE_COUNT"
			NUM 0
			SET
				VAR "ARGUMENT_COUNT"
				VAR "VALUES"
					NUM 0
		CALL
			GBL "ARRAY.ADD"
			VAR "FUNCTIONS"
			VAR "FUNCTION_BODY"
		LEN
			VAR "FUNCTIONS"
			VAR "FUNCTION_ID"
		CALL
			GBL "STRING.TO_STRING"
			VAR "FUNCTION_ID"
			NUM 10
			VAR "FUNCTION_ID_STRING"
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			ARR "f_["
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			VAR "FUNCTION_ID_STRING"
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			ARR "]=function("
		LOOP
			CMP "="
				VAR "ARGUMENT_INDEX"
				VAR "ARGUMENT_COUNT"
				BRK
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "a_"
			CALL
				GBL "STRING.TO_STRING"
				VAR "ARGUMENT_INDEX"
				NUM 10
				VAR "ARGUMENT_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				VAR "ARGUMENT_ID_STRING"
			ARIT "+"
				VAR "ARGUMENT_INDEX"
				NUM 1
			CMP "<"
				VAR "ARGUMENT_INDEX"
				VAR "ARGUMENT_COUNT"
				CALL
					GBL "ARRAY.ADD"
					VAR "FUNCTION_BODY"
					NUM ","
		CALL
			GBL "ARRAY.ADD"
			VAR "FUNCTION_BODY"
			NUM ")"
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			GBL "STRING.NEW_LINE"
		CALL
			GBL "BOT.BLOCK.GET_BLOCKS"
			VAR "BLOCK"
			VAR "BLOCKS"
		LEN
			VAR "BLOCKS"
			VAR "BLOCK_COUNT"
		LOOP
			CMP "="
				VAR "BLOCK_INDEX"
				VAR "BLOCK_COUNT"
				BRK
			CALL
				GBL "BOT.TRANSLATE"
				VAR "BLOCKS"
					VAR "BLOCK_INDEX"
				VAR "SUBROUTINE_BODY"
				VAR "LOCALS"
				ARG 3
				VAR "ARGUMENT_COUNT"
				VAR "TEMP_COUNT"
				VAR "INLINE_COUNT"
				ARG 7
				NUM 1
			ARIT "+"
				VAR "BLOCK_INDEX"
				NUM 1
		LEN
			VAR "LOCALS"
			VAR "LOCAL_COUNT"
		LOOP
			CMP "="
				VAR "LOCAL_INDEX"
				VAR "LOCAL_COUNT"
				BRK
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "	local v_"
			CALL
				GBL "STRING.TO_STRING"
				VAR "LOCAL_INDEX"
				NUM 10
				VAR "LOCAL_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				VAR "LOCAL_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "=0"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				GBL "STRING.NEW_LINE"
			ARIT "+"
				VAR "LOCAL_INDEX"
				NUM 1
		LOOP
			CMP "="
				VAR "TEMP_INDEX"
				VAR "TEMP_COUNT"
				BRK
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "	local t_"
			CALL
				GBL "STRING.TO_STRING"
				VAR "TEMP_INDEX"
				NUM 10
				VAR "TEMP_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				VAR "TEMP_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "=0"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				GBL "STRING.NEW_LINE"
			ARIT "+"
				VAR "TEMP_INDEX"
				NUM 1
		LOOP
			CMP "="
				VAR "INLINE_INDEX"
				VAR "INLINE_COUNT"
				BRK
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "	local i_"
			CALL
				GBL "STRING.TO_STRING"
				VAR "INLINE_INDEX"
				NUM 10
				VAR "INLINE_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				VAR "INLINE_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "=0"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				GBL "STRING.NEW_LINE"
			ARIT "+"
				VAR "INLINE_INDEX"
				NUM 1
		SET
			VAR "ARGUMENT_INDEX"
			NUM 0
		LOOP
			CMP "="
				VAR "ARGUMENT_INDEX"
				VAR "ARGUMENT_COUNT"
				BRK
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "	a_"
			CALL
				GBL "STRING.TO_STRING"
				VAR "ARGUMENT_INDEX"
				NUM 10
				VAR "ARGUMENT_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				VAR "ARGUMENT_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "=a_"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				VAR "ARGUMENT_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR " or 0"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				GBL "STRING.NEW_LINE"
			ARIT "+"
				VAR "ARGUMENT_INDEX"
				NUM 1
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			VAR "SUBROUTINE_BODY"
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			ARR "	return"
		CMP ">"
			VAR "ARGUMENT_COUNT"
			NUM 0
			CALL
				GBL "ARRAY.ADD"
				VAR "FUNCTION_BODY"
				NUM " "
		SET
			VAR "ARGUMENT_INDEX"
			NUM 0
		LOOP
			CMP "="
				VAR "ARGUMENT_INDEX"
				VAR "ARGUMENT_COUNT"
				BRK
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				ARR "a_"
			CALL
				GBL "STRING.TO_STRING"
				VAR "ARGUMENT_INDEX"
				NUM 10
				VAR "ARGUMENT_ID_STRING"
			CALL
				GBL "ARRAY.EXTEND"
				VAR "FUNCTION_BODY"
				VAR "ARGUMENT_ID_STRING"
			ARIT "+"
				VAR "ARGUMENT_INDEX"
				NUM 1
			CMP "<"
				VAR "ARGUMENT_INDEX"
				VAR "ARGUMENT_COUNT"
				CALL
					GBL "ARRAY.ADD"
					VAR "FUNCTION_BODY"
					NUM ","
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			GBL "STRING.NEW_LINE"
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			ARR "end"
		CALL
			GBL "ARRAY.EXTEND"
			VAR "FUNCTION_BODY"
			GBL "STRING.NEW_LINE"
		CALL
			GBL "ARRAY.EXTEND"
			VAR "BODY"
			ARR "f_["
		CALL
			GBL "ARRAY.EXTEND"
			VAR "BODY"
			VAR "FUNCTION_ID_STRING"
		CALL
			GBL "ARRAY.EXTEND"
			VAR "BODY"
			ARR "]"