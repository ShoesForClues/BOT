SET
	GBL "STRING.NEW_LINE"
	ARR 10
SET
	GBL "STRING.CONCAT"
	FUN 3
		SET
			ARG 2
			ARR
		RES
			ARG 2
			ARIT "+"
				LEN
					ARG 0
				LEN
					ARG 1
		LOOP
			CMP "="
				VAR "INDEX"
				LEN
					ARG 0
				BRK
			SET
				ARG 2
					VAR "INDEX"
				ARG 0
					VAR "INDEX"
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
		LOOP
			CMP "="
				VAR "INDEX"
				LEN
					ARG 2
				BRK
			SET
				ARG 2
					VAR "INDEX"
				ARG 1
					ARIT "%"
						VAR "INDEX"
						LEN
							ARG 0
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
SET
	GBL "STRING.SUB"
	FUN 4
		SET
			ARG 3
			ARR
		RES
			ARG 3
			ARIT "-"
				ARIT "+"
					ARG 2
					NUM 1
				ARG 1
		SET
			VAR "INDEX"
			ARG 1
		LOOP
			CMP ">"
				VAR "INDEX"
				ARG 2
				BRK
			SET
				ARG 3
					ARIT "-"
						VAR "INDEX"
						ARG 1
				ARG 0
					VAR "INDEX"
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
SET
	GBL "STRING.COMPARE"
	FUN 3
		SET
			ARG 2
			NUM 0
		CMP "!"
			LEN
				ARG 0
			LEN
				ARG 1
			RET
		LOOP
			CMP "="
				VAR "INDEX"
				LEN
					ARG 0
				BRK
			CMP "!"
				ARG 0
					VAR "INDEX"
				ARG 1
					VAR "INDEX"
				RET
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
		SET
			ARG 2
			NUM 1
SET
	GBL "STRING.TO_STRING"
	FUN 2
		SET
			ARG 1
			ARR
		CMP "<" ;Check sign
			ARG 0
			NUM 0
			SUB
				SET
					VAR "SIGN"
					NUM 1
				SET
					VAR "ABS"
					ARIT "-"
						NUM 0
						ARG 0
			SET
				VAR "ABS"
				ARG 0
		SET
			VAR "DIGITS"
			NUM 1
		LOOP ;Calculate number of digits
			CMP "<"
				ARIT "/"
					VAR "ABS"
					ARIT "^"
						NUM 10
						VAR "DIGITS"
				NUM 1
				BRK
			SET
				VAR "DIGITS"
				ARIT "+"
					VAR "DIGITS"
					NUM 1
		LOOP ;Calculate decimal places
			SET
				VAR "TEMP"
				ARIT "+"
					ARIT "*"
						VAR "ABS"
						ARIT "^"
							NUM 10
							VAR "DECIMALS"
					ARIT "/"
						NUM 1
						NUM 2
			SET
				VAR "TEMP"
				ARIT "-"
					VAR "TEMP"
					ARIT "%"
						VAR "TEMP"
						NUM 1
			CMP "="
				ARIT "/"
					VAR "TEMP"
					ARIT "^"
						NUM 10
						VAR "DECIMALS"
				VAR "ABS"
				BRK
			SET
				VAR "DECIMALS"
				ARIT "+"
					VAR "DECIMALS"
					NUM 1
		CMP "="
			VAR "DECIMALS"
			NUM 0
			RES
				ARG 1
				ARIT "+"
					VAR "SIGN"
					VAR "DIGITS"
			RES
				ARG 1
				ARIT "+"
					VAR "SIGN"
					VAR "DIGITS"
					VAR "DECIMALS"
					NUM 1 ;For decimal point
		CMP "="
			VAR "SIGN"
			NUM 1
			SUB
				SET
					ARG 1
						NUM 0
					NUM "-"
				SET
					VAR "CHAR_INDEX"
					NUM 1
		SET
			VAR "DIGIT_INDEX"
			NUM 1
		LOOP
			CMP "="
				VAR "CHAR_INDEX"
				LEN
					ARG 1
				BRK
			SET
				VAR "DIGIT"
				ARIT "%"
					ARIT "/"
						VAR "ABS"
						ARIT "^"
							NUM 10
							ARIT "-"
								VAR "DIGITS"
								VAR "DIGIT_INDEX"
					NUM 10
			SET
				VAR "DIGIT"
				ARIT "-"
					VAR "DIGIT"
					ARIT "%"
						VAR "DIGIT"
						NUM 1
			CMP "=" ;Insert decimal point
				VAR "DIGIT_INDEX"
				ARIT "+"
					VAR "DIGITS"
					NUM 1
				SUB
					SET
						ARG 1
							VAR "CHAR_INDEX"
						NUM "."
					SET
						VAR "CHAR_INDEX"
						ARIT "+"
							VAR "CHAR_INDEX"
							NUM 1
			CMP ">"
				ARIT "+"
					VAR "DIGIT"
					NUM 48
				NUM "9"
				SET
					ARG 1
						VAR "CHAR_INDEX"
					NUM "0"
				SET
					ARG 1
						VAR "CHAR_INDEX"
					ARIT "+"
						VAR "DIGIT"
						NUM 48 ;ASCII char 0 starts at 48
			SET
				VAR "DIGIT_INDEX"
				ARIT "+"
					VAR "DIGIT_INDEX"
					NUM 1
			SET
				VAR "CHAR_INDEX"
				ARIT "+"
					VAR "CHAR_INDEX"
					NUM 1
SET
	GBL "STRING.TO_NUMBER"
	FUN 2
		SET
			ARG 1
			NUM 0
		CMP "=" ;Parse sign
			ARG 0
				NUM 0
			NUM "-"
			SUB
				SET
					VAR "IS_NEGATIVE"
					NUM 1
				SET
					VAR "INDEX"
					NUM 1
		LOOP ;Parse integer
			CMP "="
				VAR "INDEX"
				LEN
					ARG 0
				BRK
			CMP "="
				ARG 0
					VAR "INDEX"
				NUM "."
				SUB
					SET
						VAR "INDEX"
						ARIT "+"
							VAR "INDEX"
							NUM 1
					BRK
			SET
				ARG 1
				ARIT "+"
					ARIT "*"
						ARG 1
						NUM 10
					ARIT "-"
						ARG 0
							VAR "INDEX"
						NUM 48
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
		LOOP ;Parse decimal
			CMP ">="
				VAR "INDEX"
				LEN
					ARG 0
				BRK
			SET
				VAR "POINT"
				ARIT "+"
					VAR "POINT"
					NUM 1
			SET
				VAR "DECIMAL"
				ARIT "+"
					VAR "DECIMAL"
					ARIT "/"
						ARIT "-"
							ARG 0
								VAR "INDEX"
							NUM 48
						ARIT "^"
							NUM 10
							VAR "POINT"
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
		SET
			ARG 1
			ARIT "+"
				ARG 1
				VAR "DECIMAL"
		CMP "="
			VAR "IS_NEGATIVE"
			NUM 1
			SET
				ARG 1
				ARIT "-"
					NUM 0
					ARG 1
SET
	GBL "STRING.FIND"
	FUN 5
SET
	GBL "STRING.FORMAT"
	FUN 2
		SET
			VAR "FORMAT_LENGTH"
			LEN
				ARG 0
		LOOP
			CMP ">="
				VAR "INDEX"
				LEN
					ARG 0
				BRK
			CMP "="
				ARG 0
					VAR "INDEX"
				NUM "\"
				SUB
					SET
						VAR "FORMAT_LENGTH"
						ARIT "-"
							VAR "FORMAT_LENGTH"
							NUM 1
					SET
						VAR "INDEX"
						ARIT "+"
							VAR "INDEX"
							NUM 1
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
		SET
			VAR "INDEX"
			NUM 0
		SET
			ARG 1
			ARR
		RES
			ARG 1
			VAR "FORMAT_LENGTH"
		LOOP
			CMP "="
				VAR "INDEX"
				LEN
					ARG 0
				BRK
			CMP "="
				ARG 0
					VAR "INDEX"
				NUM "\"
				SUB
					CMP "="
						ARG 0
							ARIT "+"
								VAR "INDEX"
								NUM 1
						NUM "\"
						SET
							ARG 1
								VAR "FORMAT_INDEX"
							NUM "\"
					CMP "="
						ARG 0
							ARIT "+"
								VAR "INDEX"
								NUM 1
						NUM "a"
						SET
							ARG 1
								VAR "FORMAT_INDEX"
							NUM 7
					CMP "="
						ARG 0
							ARIT "+"
								VAR "INDEX"
								NUM 1
						NUM "b"
						SET
							ARG 1
								VAR "FORMAT_INDEX"
							NUM 8
					CMP "="
						ARG 0
							ARIT "+"
								VAR "INDEX"
								NUM 1
						NUM "n"
						SET
							ARG 1
								VAR "FORMAT_INDEX"
							NUM 10
					CMP "="
						ARG 0
							ARIT "+"
								VAR "INDEX"
								NUM 1
						NUM "r"
						SET
							ARG 1
								VAR "FORMAT_INDEX"
							NUM 13
					CMP "="
						ARG 0
							ARIT "+"
								VAR "INDEX"
								NUM 1
						NUM "t"
						SET
							ARG 1
								VAR "FORMAT_INDEX"
							NUM "	"
					CMP "="
						ARG 0
							ARIT "+"
								VAR "INDEX"
								NUM 1
						NUM "v"
						SET
							ARG 1
								VAR "FORMAT_INDEX"
							NUM 11
					SET
						VAR "INDEX"
						ARIT "+"
							VAR "INDEX"
							NUM 1
				SET
					ARG 1
						VAR "FORMAT_INDEX"
					ARG 0
						VAR "INDEX"
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
			SET
				VAR "FORMAT_INDEX"
				ARIT "+"
					VAR "FORMAT_INDEX"
					NUM 1
SET
	GBL "STRING.GET_LINES"
	FUN 2
		SET
			ARG 1
			ARR
		SET
			VAR "LINE"
			ARR
		LOOP
			CMP "="
				VAR "INDEX"
				LEN
					ARG 0
				BRK
			CMP "="
				ARG 0
					VAR "INDEX"
				NUM 10
				SUB
					RES
						ARG 1
						ARIT "+"
							LEN
								ARG 1
							NUM 1
					SET
						ARG 1
							ARIT "-"
								LEN
									ARG 1
								NUM 1
						VAR "LINE"
					SET
						VAR "LINE"
						ARR
				SUB
					RES
						VAR "LINE"
						ARIT "+"
							LEN
								VAR "LINE"
							NUM 1
					SET
						VAR "LINE"
							ARIT "-"
								LEN
									VAR "LINE"
								NUM 1
						ARG 0
							VAR "INDEX"
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
		CMP "!"
			LEN
				VAR "LINE"
			NUM 0
			SUB
				RES
					ARG 1
					ARIT "+"
						LEN
							ARG 1
						NUM 1
				SET
					ARG 1
						ARIT "-"
							LEN
								ARG 1
							NUM 1
					VAR "LINE"
SET
	GBL "STRING.REPEAT"
	FUN 3
		SET
			VAR "REPEAT_LENGTH"
			ARIT "*"
				LEN
					ARG 0
				ARG 1
		SET
			ARG 2
			ARR
		RES
			ARG 2
			VAR "REPEAT_LENGTH"
		LOOP
			CMP "="
				VAR "INDEX"
				VAR "REPEAT_LENGTH"
				BRK
			SET
				ARG 2
					VAR "INDEX"
				ARG 0
					ARIT "%"
						VAR "INDEX"
						LEN
							ARG 0
			SET
				VAR "INDEX"
				ARIT "+"
					VAR "INDEX"
					NUM 1
SET
	GBL "STRING.REPLACE"
	FUN 4
SET
	GBL "STRING.COMPILE"
	FUN 3
		LOOP
			CMP "="
				VAR "STRING_INDEX"
				LEN
					ARG 0
				BRK
			SET
				VAR "STRING"
				ARG 0
					VAR "STRING_INDEX"
			SET
				VAR "COMPILE_SIZE"
				ARIT "+"
					VAR "COMPILE_SIZE"
					LEN
						VAR "STRING"
			SET
				VAR "STRING_INDEX"
				ARIT "+"
					VAR "STRING_INDEX"
					NUM 1
		SET
			ARG 1
			ARR
		RES
			ARG 1
			VAR "COMPILE_SIZE"
		SET
			VAR "STRING_INDEX"
			NUM 0
		LOOP
			CMP "="
				VAR "STRING_INDEX"
				LEN
					ARG 0
				BRK
			SET
				VAR "STRING"
				ARG 0
					VAR "STRING_INDEX"
			SET
				VAR "STRING_CHAR_INDEX"
				NUM 0
			LOOP
				CMP "="
					VAR "STRING_CHAR_INDEX"
					LEN
						VAR "STRING"
					BRK
				SET
					ARG 1
						VAR "COMPILE_CHAR_INDEX"
					VAR "STRING"
						VAR "STRING_CHAR_INDEX"
				SET
					VAR "STRING_CHAR_INDEX"
					ARIT "+"
						VAR "STRING_CHAR_INDEX"
						NUM 1
				SET
					VAR "COMPILE_CHAR_INDEX"
					ARIT "+"
						VAR "COMPILE_CHAR_INDEX"
						NUM 1
			SET
				VAR "STRING_INDEX"
				ARIT "+"
					VAR "STRING_INDEX"
					NUM 1
SET
	GBL "STRING.GET_WORDS"
	FUN 2
		SET
			VAR "STRING"
			ARG 0
		SET
			VAR "WORDS"
			ARR
		LOOP
			CMP ">="
				VAR "CHAR_INDEX"
				LEN
					VAR "STRING"
				BRK
			CMP ">"
				VAR "STRING"
					VAR "CHAR_INDEX"
				NUM 32
				CMP "<"
					VAR "STRING"
						VAR "CHAR_INDEX"
					NUM 127
					SUB
						SET
							VAR "START"
							VAR "CHAR_INDEX"
						LOOP
							CMP ">="
								VAR "CHAR_INDEX"
								LEN
									VAR "STRING"
								BRK
							CMP "<="
								VAR "STRING"
									VAR "CHAR_INDEX"
								NUM 32
								BRK
							CMP ">="
								VAR "STRING"
									VAR "CHAR_INDEX"
								NUM 127
								BRK
							SET
								VAR "CHAR_INDEX"
								ARIT "+"
									VAR "CHAR_INDEX"
									NUM 1
						CALL
							GBL "STRING.SUB"
							VAR "STRING"
							VAR "START"
							ARIT "-"
								VAR "CHAR_INDEX"
								NUM 1
							VAR "WORD"
						RES
							VAR "WORDS"
							ARIT "+"
								LEN
									VAR "WORDS"
								NUM 1
						SET
							VAR "WORDS"
								ARIT "-"
									LEN
										VAR "WORDS"
									NUM 1
							VAR "WORD"
			SET
				VAR "CHAR_INDEX"
				ARIT "+"
					VAR "CHAR_INDEX"
					NUM 1
		SET
			ARG 1
			VAR "WORDS"